name: GetPong.Api Dev - Push to CR

on:
  push:
    branches:
      - dev
    paths:
      - "api/**"

env:
  REGISTRY: "getpong.azurecr.io"
  REGISTRY_USERNAME: "getpong"
  REPO: "getpong-api-dev"
  IMAGE: "getpong-dev"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: api/GetPong
      - name: Build
        run: dotnet build --no-restore
        working-directory: api/GetPong
      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: api/GetPong

  build_and_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: "api/GetPong/GetPong.Api/appsettings.json"
        env:
          AzureAd.TenantId: "8990c32d-7eb3-4e7e-8a29-0e4ec8618f48"
          AzureAd.ClientId: "df75520c-c168-4c9e-a9b9-ccb7045fd434"
          AzureAd.ClientSecret: ${{ secrets.AZ_CLIENT_SECRET }}
          MongoDb.ConnectionString: ${{ secrets.CONNSTR_DEV }}

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          login-server: ${{ env.REGISTRY }}

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $REPO)/$(echo $IMAGE):$(echo $GITHUB_SHA | head -c7) . -f api/GetPong/Dockerfile

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $REPO)/$(echo $IMAGE):$(echo $GITHUB_SHA | head -c7)

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $REPO)/$(echo $IMAGE):latest . -f api/GetPong/Dockerfile

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $REPO)/$(echo $IMAGE):latest
